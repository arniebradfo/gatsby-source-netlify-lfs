# TODO

## Release
- use typescript to compile 
- alias this as a yarn package to test properly
- make the lfs-img cli inputs work
- make an npm cli script that works
- –––
- plan architecture for extension
  - add gatsby-config.js settings
- rename things
- write instructions
- release and test cli


## Improve
- automatically create `getNetlifyLfsImage.js` if it doesn't exist
  - provide commented defaultArgs based on: [default options](https://www.gatsbyjs.com/plugins/gatsby-plugin-image#customizing-the-default-options)
- support options in `gatsby-config.js` related to
  - `gatsby-plugin-image`
    - [default options](https://www.gatsbyjs.com/plugins/gatsby-plugin-image#customizing-the-default-options)?
  - `gatsby-plugin-sharp`
    - [placeholderOptions](https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-plugin-image/#placeholder)
      - [base64](https://www.gatsbyjs.com/plugins/gatsby-plugin-sharp#toformatbase64)
      - [tracedSVG](https://www.gatsbyjs.com/plugins/gatsby-plugin-sharp#tracedsvg)
      - dominantColor
      - none
    - [transformOptions](https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-plugin-image/#transformoptions) with css filters
      - [grayscale](https://www.gatsbyjs.com/plugins/gatsby-plugin-sharp#grayscale) 
      - [duotone](https://www.gatsbyjs.com/plugins/gatsby-plugin-sharp#duotone)
- `resolve: 'gatsby-source-netlify-lfs` should check during gatsby-build to see if `netlifyLfsImageDimensions.json` exists
  - in the short term, it should just log something...

